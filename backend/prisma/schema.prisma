// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(ORGANIZER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  events Event[]

  @@map("users")
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String?
  date        DateTime
  location    String
  maxGuests   Int?
  imageUrl    String?
  isActive    Boolean  @default(true)
  isPublic    Boolean  @default(false)
  registrationPaused Boolean @default(false)  // Pausar inscrições manualmente
  registrationPauseUntil DateTime?  // Pausar inscrições até uma data específica
  customFields Json?   // Campos personalizados do evento
  formConfig  Json?    // Configuração do formulário de inscrição
  publicPageConfig Json? // Configuração da página pública do evento
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  guests    Guest[]
  checkIns  CheckIn[]

  @@map("events")
}

model Guest {
  id          String    @id @default(cuid())
  name        String
  email       String?
  phone       String?
  confirmed   Boolean   @default(false)
  confirmedAt DateTime?
  qrCode      String    @unique
  customFields Json?    // Campos personalizados do convidado
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relacionamentos
  eventId   String
  event     Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  checkIns  CheckIn[]

  @@map("guests")
}

model CheckIn {
  id        String   @id @default(cuid())
  checkedInAt DateTime @default(now())
  
  // Relacionamentos
  eventId   String
  event     Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  guestId   String
  guest     Guest     @relation(fields: [guestId], references: [id], onDelete: Cascade)

  @@unique([eventId, guestId])
  @@map("check_ins")
}

enum UserRole {
  ADMIN
  ORGANIZER
} 